<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>macos Python 版本问题</title>
      <link href="/2020/07/20/python-macos/"/>
      <url>/2020/07/20/python-macos/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>macos系统自带的python2.7，但是2020年python2.7已经不再维护，因此我们需要升级到3.0以上。</p><h2 id="查看已安装python版本"><a href="#查看已安装python版本" class="headerlink" title="查看已安装python版本"></a>查看已安装python版本</h2><p><code>python -V</code></p><h2 id="安装路径"><a href="#安装路径" class="headerlink" title="安装路径"></a>安装路径</h2><p>不同方式安装有不同的安装路径：<br>系统默认<br><code>/System/Library/Frameworks/Python.framework/Versions/2.7</code></p><p>brew 安装<br><code>/usr/local/Cellar/python</code></p><p>官网pkg安装   <code>/Library/Frameworks/Python.framework/Versions/3.7</code></p><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>升级python主要有两种方法</p><h3 id="使用Mac自带的包管理工具brew"><a href="#使用Mac自带的包管理工具brew" class="headerlink" title="使用Mac自带的包管理工具brew"></a>使用Mac自带的包管理工具brew</h3><p><code>brew upgrade python</code></p><h3 id="下载安装包升级"><a href="#下载安装包升级" class="headerlink" title="下载安装包升级"></a>下载安装包升级</h3><p>python官网下载 地址：<a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a></p><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>使用软链接，把终端中的python和pip，指定为我们下载后的python3和pip3。这可以通过修改环境来实现<br>打开环境变量：根据自己的安装方式，找到安装目录，添加进环境。</p><pre class="line-numbers language-shell"><code class="language-shell">open ~/.bash.profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-vim"><code class="language-vim">alias python3<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar<span class="token operator">/</span><span class="token keyword">python</span>@<span class="token number">3.8</span><span class="token operator">/</span><span class="token number">3.8</span><span class="token operator">.</span><span class="token number">2</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>python3<span class="token operator">.</span><span class="token number">8</span>alias python2<span class="token operator">=</span><span class="token operator">/</span>System<span class="token operator">/</span>Library<span class="token operator">/</span>Frameworks<span class="token operator">/</span>Python<span class="token operator">.</span>framework<span class="token operator">/</span>Versions<span class="token operator">/</span><span class="token number">2.7</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>python2<span class="token operator">.</span><span class="token number">7</span>alias <span class="token keyword">python</span><span class="token operator">=</span>python3alias pip<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>Cellar<span class="token operator">/</span><span class="token keyword">python</span>@<span class="token number">3.8</span><span class="token operator">/</span><span class="token number">3.8</span><span class="token operator">.</span><span class="token number">2</span><span class="token operator">/</span><span class="token builtin">bin</span><span class="token operator">/</span>pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell">source ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> macos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> macos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM编辑器</title>
      <link href="/2020/02/16/vim/"/>
      <url>/2020/02/16/vim/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>vi是一个命令行界面下的文本编辑工具，最早在1976年由bill joy开发，当时名字叫做ex,vi支持大多数操作系统（最早在BSD上发布），并且功能已经十分强大。1991年bram基于vi进行了改进，发布了vim,加入了GUI的支持。<br>当前vim已经不仅仅是普通意义上的文本编辑器（如window上的记事本），而是被广泛的作为在文本编辑，文本处理，代码开发等用途。<br>Linux中知名的文本编辑器还有emacs,它的功能比vim还要强大。<br>绝大数Linux系统上均安装vim，vim比vi的功能更为强大。<br>vim命令可以启动vim编辑器<br>一般我们使用vim+目标文件路径的形式使用vim<br>如果目标文件存在，则vim打开文件，如果目标文件不存在，则vim新建并打开该文件</p><h2 id="四种模式"><a href="#四种模式" class="headerlink" title="四种模式"></a>四种模式</h2><h3 id="normal模式"><a href="#normal模式" class="headerlink" title="normal模式"></a>normal模式</h3><p>vim启动后，默认进入normal模式，任何模式都可以通过esc键回到normal模式（可以按几次）。normal模式下可以通过键入不同的命令完成选择，复制，粘贴，撤销等等操作。</p><p><strong>进入插入模式：</strong><br> i（insert）: 在光标前插入文本<br>o (open a line below): 在当前行的下面插入新行<br>a (append):追加，在当前光标后插入<br>A：在行最后位置插入<br>I：  在行最前的位置插入<br>O：在当前编辑位置的上面新起一行</p><p><strong>移动：</strong><br>h:左<br>j:下<br>k:上<br>l:右</p><p><strong>在单词之间移动：</strong><br>w/W 移到下一个word/WORD开头，<br>e/E 下一个word/WORD结尾<br>b/B 回到上一个word/WORD开头 backword<br>word指的是以非空白符分割的单词，WORD指的是以空白符分割的单词。</p><p><strong>行间搜索移动：</strong><br>同一行快速移动的方式其实是搜索一个字符并且移动到该字符<br>使用f{char}可以移动到char字符上，t移动到char的前一个字符<br>如果第一次没有搜到，可以用分号；/逗号，继续搜该行下一个/上一个。<br>大写的F表示反过来搜前面的字符</p><p><strong>vim 水平移动：</strong><br>0移动到行首第一个字符<br>^移动到第一个非空白字符<br>$移动到行尾<br>g_移动到行尾非空白字符</p><p><strong>vim垂直移动：</strong><br>在句子sentence和段落paragraph间移动<br>使用括号（）在句子间移动<br>使用{}在段落之间移动<br>使用easy-montion插件移动。</p><p><strong>vim 页面移动：</strong><br>gg/G移动到文件开头和结尾<br>ctrl+o快速返回。<br>H/M/L 跳转到屏幕的开头head,中间middle，结尾lower<br>ctrl+u ctrl+f上下翻页，upword/forword<br>zz把屏幕置为中间。</p><p><strong>删除：</strong><br>    x:删除当前光标所在的一个字符<br>    .:再次删除一个字符<br>    N<command>:<br>        10x：删除10个连续字符<br>        3dd：删除三行文本<br>    dw:删除一个单词，dnw，n换为数字，删除n个单词</p><p><strong>行间跳转：</strong><br>                nG(c shift+g)： 游标移动到第几行<br>                gg：游标移动第一行<br>                G(shift+g) ：游标移动到最后一行<br>                ctrl+o : 快速回到上一次光标所在位置<br>                ~:将游标所在字母变成大写</p><p><strong>复制和粘贴：</strong><br>             yy将当前行的内容放入缓冲区（复制游标所在的整行，3yy表示复制3行）<br>                y^ 复制至行首，或y0。不含光标所在处字符。<br>                y$ 复制至行尾。含光标所在处字符。<br>                yw 复制一个单词。<br>                y2w 复制两个单词。<br>                yG 复制至文本末。<br>                y1G 复制至文本开头。<br>                p将缓冲区中的文本放入光标后（粘贴）<br>                p(小写)代表粘贴至光标后（下）<br>                P(大写)代表粘贴至光标前（上）<br>        dd:剪切<br>        p:粘贴<br>        ddp:交换上下行位置</p><p><strong>查找和替换(undo命令)：</strong></p><p>r+&lt;代替换字母&gt;：将游标所在字母替换为指定字母<br>R    连续替换，直到按下Esc<br>cc    替换整行，即删除游标所在行，并进入插入模式<br>cw    替换一个单词，即删除一个单词，并进入插入模式<br>C(大写)    替换游标以后至行末<br>~    反转游标所在字母大小写</p><p><strong>撤销：</strong><br>u{n}    撤销一次或n次操作<br>U(大写)    撤销当前行的所有修改<br>Ctrl+r    redo，即撤销undo的操作</p><p><strong>快速缩进：</strong><br>        &gt;&gt; 整行将向右缩进<br>        &lt;&lt; 整行向左回退<br>        :set shiftwidth?  获取目前设定值<br>        :set shiftwidth=10 设置缩进为10个字符<br>命令行模式下输入<br>                                :ri(right)命令使本行文本靠右<br>                                :ce(center)命令使本行内容居中<br>                                le(left)命令使本行内容靠左</p><p><strong>快速查找：</strong><br>        / string  然后回车查找字符串string<br>        n  查找下一个string<br>        ? tcp 向上查找字符串tcp<br>        N 查找上一个出现的tcp<br>        命令模式下输入 noh 回车取消搜索</p><pre><code>    普通模式下输入\*寻找游标所在处的单词    普通模式下输入\#同上，但 \# 是向前（上）找，\*则是向后（下）找    普通模式下输入g\*同\* ，但部分符合该单词即可    普通模式下输入g\#同\# ，但部分符合该单词即可</code></pre><h3 id="insert模式"><a href="#insert模式" class="headerlink" title="insert模式"></a>insert模式</h3><pre><code> 命令模式 按i 即可进入插入模式，在插入模式中可以输入编辑文本内容，按esc键可以返回命令模式</code></pre><p><strong>如何快速纠错</strong>：<br> ctrl+h 删除上一个字符<br> ctrl+w 删除上一个单词<br> ctrl+u 删除当前行</p><p><strong>快速切换normal和insert</strong><br>esc,ctrl+c,ctrl+[<br>gi快速跳转到你最后一次编辑的地方并进入插入模式。<br>如何映射方便的快捷键来替代esc</p><h3 id="command模式"><a href="#command模式" class="headerlink" title="command模式"></a>command模式</h3><pre><code> 在normal模式中按“：”进入command模式，光标会移动到底部，在这里可以保存，修改或退出vim    :w  write保存当前修改    :q  quit退出    :wq write quit 保存退出    :q!  quit!强制退出    :x 保存并退出    :set nu    显示行号    :! 系统命令 执行一个系统命令并显示结果    :sh  切换到命令行，使用ctrl+d切换回vim    :vs(vertical split),sp(split) 分屏 :% s/java/python/g 全局替换 java替换为python</code></pre><h3 id="visual-可视-模式"><a href="#visual-可视-模式" class="headerlink" title="visual(可视)模式"></a>visual(可视)模式</h3><p>visua模式一般用来块状选择文本，normal模式下使用v进入visual选择。使用V选择行。使用ctrl+v进行块状选择。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
